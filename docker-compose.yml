# Docker Compose para Desenvolvimento
# Execute: docker-compose up -d

version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: meta-educacao-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: meta_educacao_dev
      POSTGRES_USER: meta_dev
      POSTGRES_PASSWORD: meta_dev_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - meta-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meta_dev -d meta_educacao_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação principal (desenvolvimento)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: meta-educacao-app-dev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: "postgresql://meta_dev:meta_dev_password@postgres:5432/meta_educacao_dev"
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: meta_dev
      PGPASSWORD: meta_dev_password
      PGDATABASE: meta_educacao_dev
      
      # Application
      NODE_ENV: development
      PORT: 5000
      ADMIN_PORT: 5001
      ENABLE_ADMIN_SERVER: "true"
      
      # Security
      JWT_SECRET: "desenvolvimento-jwt-secret-nao-usar-em-producao-nunca"
      
      # CORS
      PUBLIC_ALLOWED_ORIGINS: "http://localhost:5000,http://localhost:3000"
      ADMIN_ALLOWED_ORIGINS: "http://localhost:5001"
      
      # File Upload
      MAX_FILE_SIZE: "52428800"  # 50MB
      UPLOAD_PATH: "./uploads"
      
    ports:
      - "5000:5000"  # Servidor público
      - "5001:5001"  # Servidor admin (apenas localhost)
    volumes:
      - ./client:/app/client
      - ./server:/app/server
      - ./shared:/app/shared
      - ./uploads:/app/uploads
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./vite.config.ts:/app/vite.config.ts
      - node_modules_dev:/app/node_modules
    networks:
      - meta-network
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/courses"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer (interface web para PostgreSQL)
  adminer:
    image: adminer:4.8.1
    container_name: meta-educacao-adminer-dev
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - meta-network
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: nette

# Volumes para persistência de dados
volumes:
  postgres_dev_data:
    name: meta_educacao_postgres_dev
  node_modules_dev:
    name: meta_educacao_node_modules_dev

# Rede interna
networks:
  meta-network:
    name: meta-educacao-network
    driver: bridge

# Configurações adicionais
x-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"